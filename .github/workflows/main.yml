name: Build project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unity-build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Use cache to speed up build
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-          

      - name: Free disk space for Android build
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Build Unity project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android
          projectPath: "src/unity/TimeGlideVR"

      - name: Archive Android build
        uses: actions/upload-artifact@v3
        with:
          name: AndroidBuild
          path: build/Android/**/*apk

      - name: Generate a version number
        id: version
        run: echo "::set-output name=version::$(date +'%Y.%m.%d').${{ github.run_number }}"

      - name: Create a new Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Android/Android.apk
          asset_name: VirtualMuseum-${{ steps.version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Push tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${{ steps.version.outputs.version }}
          git push origin v${{ steps.version.outputs.version }}



server-build:
    runs-on: ubuntu-latest
    needs: [generate-version]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore "src/server/virtualmuseum.web/virtualmuseum.web.csproj"
      
      - name: Generate a version number
        id: version
        run: echo "::set-output name=version::$(date +'%Y.%m.%d').${{ github.run_number }}"

      - name: Publish
        run: dotnet publish "src/server/virtualmuseum.web/virtualmuseum.web.csproj" -c Release -o /tmp/publish

      - name: Zip published files
        run: zip -r virtualmuseum-${{ steps.version.outputs.version }}.zip /tmp/publish

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ServerBuild-${{ steps.version.outputs.version }}
          path: virtualmuseum-${{ steps.version.outputs.version }}.zip       